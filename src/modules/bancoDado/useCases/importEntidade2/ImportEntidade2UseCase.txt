import csvParse from "csv-parse";
import fs from "fs";
import { IEntidades2Repository } from ../repositories/interface/IEntidades2Repository";

interface IImportEntidade2 {
    column1: string;
    column2: string;
}

class ImportEntidade2UseCase { 

    constructor(
        private entidades2Repository: IEntidades2Repository) {}

    loadEntidade2(file: Express.Multer.File): Promise<IImportEntidade2[]> {
        return new Promise((resolve, reject ) => {
                 
        const stream = fs.createReadStream(file.path);

        const entidade2: IImportEntidade2[] = [];

        const parseFile = csvParse();

        stream.pipe(parseFile);

        parseFile.on("data", async (line) => {
            const[column1, column2] = line;
            entidade2.push({
                column1,
                column2,
            });
        }).on("end", () => {
            fs.promises.unlink(file.path);
            resolve(entidades2)
        }).on("error", (err) => {
            reject(err);
        });
        });
    }

    async execute( file: Express.Multer.File ): Promise<void> {
        const entidades2 = await this.loadEntidade2(file);
        
        entidades2.map(async entidade2 => {
          const { colum1, colum2 } = entidade2;

          const existEntidade2 = this.entidades2Repository.findByName(name);

          if(!existEntidade2) {
            this.entidades2Repository.create({
                column1, column2,
            });
          }

        })
    }
}

export { ImportEntidade2UseCase };